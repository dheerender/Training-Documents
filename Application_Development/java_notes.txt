
11th Mar. - DevOps Batch :

	Timings : 12th Mar. ==> 2 - 5pm IST
From Next week onwards: i.e., from 18th ==> 7PM to 10PM IST.

Course Content: 

Agenda :
	Intro. about the course!!!
	Introduction to DevOps! 
	
	
Application Development :::

	Application / Software ??
	
	Web-based 
	System Software
	Application Software 
	
SDLC - Software Development Life Cycle!

	-	Application Software :
			Web Applications
			Mobile Applications 
			Desktop Applications 
		
	-	System Software 
			Operating System 
			Middleware products..
			Embedded appln.


Stages of SDLC - Software Development Life Cycle!

	Requirement Analysis
	Design
	Coding
	Testing 
	Deployment 
	Monitor/Maintain
	
	
Water-fall Model : Linear in fashion.

	Requirement Analysis
	Design
	Coding
	Testing 
	Deployment 
	Monitor/Maintain

Billing System Application :::

	Detailed Requirement Analysis ---> 6months
	Design 
	Coding ---> progress... 
	Testing 
	Deployment
	
New Change Request / Project 

	Detailed Requirement Analysis ---> 3months
	Design 
	Coding ---> progress... 
	Testing 
	Deployment


Applicationn Architecture ::
	
		Monolith Application Architecture :: can us water-fall model
	
			Tightly coupled Applications 
				Dependencies are cannot be splitted into modules. 
			
			
			
			

Billing System Application :::

	Functions :
		UI				developed  by dev1 --> can we test independently? NO.
		db
		billing
		stock
		access
	

AGILE Methodologies ::: Is a s/w development strategy --> 

Split the project into various Modules :

	Module1/Iteration1 ::: UI 
		Detailed Requirement Analysis ---> 3months
		Design 
		Coding ---> progress... 
		Testing 


	Module2/Iteration2 ::: DB 
		Detailed Requirement Analysis ---> 3months
		Design 
		Coding ---> progress... 
		Testing 
		
		
	Module3/Iteration3 ::: billing 
		Detailed Requirement Analysis ---> 3months
		Design 
		Coding ---> progress... 
		Testing 
		
	
In AGILE Methodologies we cannot deploy independent modules to Production environment.	
	
		Integration can be contiuous 
		Delivery  	can be contiuous 
		Deployment 	Cannot be Continuous

Environments:

	Non-Production Environment			==>				Production Environment (LIVE)
		DEV 
		Testing 
			QA
			UAT 
	

Create a Web Application ::::

		E-Commerce Portal 
		
		

DevOps :  Is a Software Development Strategy.
Using DevOps : Continuous Integration, Continuous Delivery & Deployments.


Create a Web Application ::::

		E-Commerce Portal ==> www.amazon.com
		
	Requirement Analysis
	Design
	Coding
	Testing 
	Deployment 
	Monitor/Maintain


DevOps Strategy ::::

	Application Architecture :
	
		-	Monolith Architecture 
					- Tightly coupled Applications 
					- Dependencies are cannot be splitted into modules. 	
					
		-	Micro Service Based Application Architecture
					- Are Designed by the Application Architects/Owners
					- De-couple the appln.
					- Independently developed, tested and deployed to production, without impacting other services
		
	
E-Commerce Portal ==> www.amazon.com

Functions/Modules/Tasks/SERVICE  ::: 

	- User Registration / Sign-up 	--> Developer1 --> Design, write the code, testing, Integrate the code for further testing --> Deployment to Prod 
	- Login 						--> Developer2 --> Design, write the code, testing --> Deployment to Prod 
	- Search 
	- Check for Reviews
	- Add to Cart
	- Place my order
	- Payment
	- Tracking
	

Domain :
	Banking
	Insurance
	Healthcare
	Retail 
	Telecomm
	
Telecomm ::
	Telecomm Service Provider1 --> Introduce a new offer --> ASAP that feature shd be implemented 
	Telecomm Service Provider2 --> 
	Telecomm Service Provider3 --> 



Who are the involved in the SDLC ???


	Infra-structure Team ==> provision/creating the servers 
	Dev Team 						Create a service 
	Testing Team
	Release Management Team 
	Production Support Team
	Monitoring Team
	Security Team 



DevOps Strategy ::: As a DevOps Architect :: 

Introduce a DevOps Process

Telecomm ::
	Telecomm Service Provider1 --> Introduce a new offer --> ASAP that feature shd be implemented 
	
	New_Mirco_Service ==> 
	
	Automate Infra-structure using DevOps Tools 
	Automate the Dev Config 
	Develop the appln.
	Automated Testing 
	



	
DevOps Stages :::

	Continuous Development	==>	Helps to improve the dev productivity ==> IDE - Eclipse based IDEs, VS Code, Integration to external systems
	Continuous Integration	==> Integrate the changes to higher environment for further tesing.
	Continuous Testing 		==> Using some automated testing tools 
	Continuous Delivery 	==> Uses Manual approval before the production release
	Continuous Deployments	==> No need of Manual approvals for production release 
	Continuous Monitoring 	==> Monitor the prod environment against the intruders/Security Threads 

Roles of DevOps Team ::: 

	Defining the process/strategy
	create automation scripts


Environments: VM Machines 

	Non-Production Environment			==>				Production Environment (LIVE)
		DEV 
		Testing 
			QA
			UAT 
			Pre-Prod / Staging							PROD
		
Continuous Delivery 	--> Needs Manual Approvals 

Continuous Deployment 	--> Fully Automated release!

Production Deployment Window!  - 4 - 6 hrs

Online banking/ 

Facebook

google

netflix 


#########
DAY-2
#########

		Intro to DevOps : Stages / Lifecycle of DevOps 
		Intro to DevOps & Services
		
		Fundamentals of AWS Cloud
		
		
		DevOps Stages :::
		
		DevOps Lifecycle :::
		
		
	Developer ::: Improve the productivity of developer ???
	
		Eclipse based IDEs. 
			
		Developer 
			- will do coding (java program - high level lang --> compiled --> machine lang/binaries - *.war/*.jar/*.dll/*.exe)
			- build the code (is a process of compiling the source code & Create artifacts/binaries/executables)
			- promote the code to testing environment 
			- Inform/Email testing team to perform the testing based the latest artifacts.
	
	Using DevOps  ::

		Developer 
			- will do coding (java/python/.net/angular/nodejs program )
			- commit/saved the src code to SCM Repo(github Repo).
			
		DevOps CI/CD Pipeline : Jenkins CI/CD Pipeline - 
			- Pickup/checkout the src code from SCM Repo (GIT)
			- perform automated build the code (is a process of compiling the source code & Create artifacts/binaries/executables) (MAVEN)
			- promote the code to testing environment (Ansible)
			- perform automated testing (Selenium)
			- Notify the users. 
	
	script/pipeline - CI/CD
	
calc.java

	sum(a,b,c)	
	c = a + b 	
	return c
	
	
test data : 5,6, = 11 
5,5, 10
100,100,200
aboutafasdfs, asdfsdf, 

Test report 
	how many test exec. 
	succ
	fail
	overall test covearge 
	
report will be sent to dev team 


	Fundamentals of Cloud Computing (AWS)
	
		Infra-structure ::: 
		
		Developer :::
		
			Infra-structure (AWS) 
			
			Create Virtual Machines & Install all the required DevOps Tools and Implement.


	
	Cloud Computing ???
	
		What is Computing Device ???
		
			Development :;
				Develop a Java Web Application --> 
				
					What are the prerequisites ???
						Hardware,processor,cpu,ram,memory,storage,environment,server, card,.....?????? --> Computing Device!
						
			
			Laptop --> Windows 11 OS
			
				To develop a Application using Linux OS.
	
			Laptop --> Hardware (Win11) --> Hypervisor --> Create Virtual Machines2(To install Linux OS)
						8GB RAM 2CPUs
						
			New Laptop with Linux 
			
			MAC 
			
			++Linux 
			
			Cloud Platform --> 
			
				Cloud Service Providers --> AWS/AZURE/GCP/  -- Create an Account.
	
	
	
			On-Premises Platform	-- Virtual Machines 
			
			Cloud Platform 			-- Virtual Machines 
			
			Types of service?
			
			
			Server ---> MYSQL/
			Webserver --> Nginx/Tomcat 
			
				deployment ??
				
				Deployment Server / Hosted Server ( Infra-structure )   -- IAAS
				
					QA  /domain/webappln
					
					UAT
					
					PROD 
		
				Application Server(Software) (Platform) -- PAAS  
					Mysql/Nginx/Tomcat
					
			
			Hybrid Platform :::
			
				On-premises			   &  			Cloud 
				
			Cloud Adoption / migration to Cloud platform
			
				- All the light weight appln are first migrated to cloud			Cloud platform 
				- All the tightly coupled appln are migrated later					on-prem 
				

Summary ::
		DevOps Fundamentals!
		AWS Fundamental
			Cloud Computing...
			
			
########
DAY-3
########

			AWS Cloud Services
			Access to AWS Cloud
			
			Lab Session prerequisites :
			
				-	
				-	
				-	
			
			Demo!
			
			
			In AWS, EC2 Instances refers to Virtual Machines Created in AWS Platform.
			
		DevOps Tools ::
		
			Managed Services : 
				AWS - Codepipeline,commit,build...
				AZURE - Azure DevOps Services 
				
				
			Self-Managed Services / Open-Source Tools :
				Jenkins 
				Git
				GITHUB
				Ansible
				Docker
				Kubernetes - kubeadm/minikube
				Terraform	IAC Tools 
				Cloud Formation Templates
				JIRA 	- 	Application LifeCycle Management Tools
				
				
		- Create a Account in GITHUB.
			Remote GIT Repository to maintain and manage the source code, Files and Folders.
			
		- AWS Cloud -- Create Free Tier Account. 
			 valid email_id, contact_number, Credit.debit Card (enabled with International Transaction)
			
			- Create AWS EC2 Instances.
				i.e., Virtual Machines 
			
			
			
			
########
DAY-4
########
			
		AWS Cloud Fundamentals --> 
		Login 
		Create VMs....
		Login to VMs...
		
		
		On-Premises (vs) cloud (AWS/AZURE/GCP)
		
		As a root user login to AWS console :: Email & password
		
		AWS Regions --> are collection of Availability zones/Data centers
		
		Virtual Machine 
			AWS -- EC2 Instances --> 
			
		Why we need Virtual Machines ???
		
			Computing Device!
			
			Windows Machine!
				Linux 
				Mac 
			On-Premises ==> 
			
			Virtual Machines ==> 
			
				Hypervisor --> config the VMs.
				
				
			cloud Platform - AWS - VM - EC2 Instances.
			
			Parameters to Launch EC2 Instances :::
			
				1. Name Tags
				2. AMI -- used to identify the type of OS.
				3. Instance Type -- CPU, RAM...
				3. VPC,Subnet,Security Group,Storage,.....  use defaults.
				4. Key Pair -- Used to Authenticate the user access to EC2 Instance.
							private / public key for auth.
							RSA -- > 
				
				
				Linux Machine in AWS ??
				
					- EC2 Instance Connect
					- SSH Client 				SSH port : 22
						MobaXterm	--> 
						Putty		--> 
			
			
			Infra-structure Team --> 
			
			DevOps Engg. --
			
				Jenkins		- VMs 
				Kubernetes 
				
				Terraform / CFT...
				
				
			Security Group :::
			
			
			Launch EC2 Instance -- > 
				Amazon Linux 2 HVM 	- ec2-user 			===> is the default user id.
				Ubuntu 				- ubuntu
				Windows 			- Adminstrator
			Security Group 
				Inbound Rules to add/remove the ports 
			Instance State --> Stop.
			
			EC2 Instance. 
				How to Access? 
					- EC2 Instance Connect
					- SSH Client 				SSH port : 22
						
						*MobaXterm	--> 
							
						Putty		--> 
					- SSH from your terminal/command prompt.
					
					Public IP Address : is not a permanent entity.
					Static IP / Elastic IP Address
					
			Billing Resources :
			
				Billing Dashboard
				
			Next :
			
				How to work on EC2 Instances! (Virtual Machine(Computing Device) - Linux/Windows/Mac)
				
				
				
			Linux ::::
			
				Linux Distributions :::
					Fedora Linux Distribution Family	- (RHEL/Centos/Amazon Linux-2)
					Debian 								- Ubuntu
					
			DevOps role in Linux Machines ???

				Manage the DevOps Tools and Services.
				
					git --> Source Code Management.
				

			Servers ::::
			
		Non-Production Environment			==>				Production Environment (LIVE)
		DEV 
		Testing 
			QA
			UAT 
			Pre-Prod / Staging									PROD_server1,2,3,4,5,6,7.
			
		Servers ::
		
			AWS :
		
		Dev_Server 			--> 	Continuous Development
									Install the Dev-Tools - Eclipse,GIT
		Build_Server		--> 	Used to build the application (Compile the src code & Create artifacts)
									to build Docker Images
		Target_Environment
			QA/UAT/Prod		-->		Deployment Server/Hosted Server/Target Server	 VMs(Hardware)
									Used Application Server (Tool/software)
										Eg.: Tomcat / Nginx
										
		Ubuntu Distribution:
		
			How to install the required DevOps Tools 
				GIT
				Jenkins 
				Ansible
				Docker ,.......
				
		To work on any packages in Linux, we shd be a root user.
		
			Manage Package :: Install/Upgrade/Remove 
			Package Manager :::
				yum			--> rhel/centos/amazon linux	yum install git
				apt-get		--> Debian - Ubuntu				apt-get install git
				dnf			--> Fedora 	
				rpm	

		
				
		E.g.: Jenkins	
		
			1. Pre-requisites
			2. Install the actual tool 
			3. Setup - Post Installation Configs
			4. Start / Enable the tool 
			

########
DAY-5
########
			Linux Package Management 
			
			GIT:
				https://git-scm.com/downloads
		
		
			Amazon Linux2 AMI --> Package Manager 
			
			amazon-linux-extras install epel -y 
		
		Jenkins :: runs as a service in port 8080		-	
			https://www.jenkins.io/doc/book/installing/
		
			sudo -i

			yum update -y

			#Install Jenkins :

			sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
			sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key

			#Install epel Package:
			amazon-linux-extras install epel

			#Install Java: 
			amazon-linux-extras install java-openjdk11

			yum install jenkins 

			#Start Jenkins:
			
			systemctl enable jenkins
			systemctl start jenkins
			systemctl status jenkins	
			
		NO.
		
			Enterprise level - AWS Account ---> which can be accessible by the root user id.
			
				user_id -- IAM User ID
				
				DevOps_Team - IAM Group	read_permission to all my users - EBS Volume
					devops_user1
					devops_user2
					devops_user3 & Password
			
				Dev_Team - IAM Group
					dev_user1
					dev_user2
					dev_user3 & Password	
					
			AWS - EKS
				Open-Source K8s - using kubeadm.(Real-time scenarios)
			AZ 	- AKS
			GCP - GKS
			
			
		Linux Fundamentals ::::
		
		Developers
		
		Linux Adminstrators
		
		DevOps Engg. 
			
			DevOps Package Management
				Installation,Upgrade,Remove 
				Product License 
			User Management 
			File Management
				Create,manage the files
				Scripts - shell,python,yaml....
			Access Control
			Backup & Recovery
			
			Core Linux Architecture 
			Basic Linux Commands.
			Shell Scripting
			
			Remote server Access
				SSH... 
				
			Ansible / Terraform 
				
			

########
DAY-6
########	
		
		Linux Fundamentals :::
		
		
			Linux Architecture & Key Features.
			
			Operating System ???
			
			
			
			
			Linux Basic Commands.
			
			
			
			
		Applications 
			
		Middleware products 
			
		Operating System 	
			
		Hardware 
			
		Types of OS ::
			
			Windows 
			Mac
			Android
			
		Linux 
			-- Open Source
			-- Unix 
			-- Linux Distributions
				-->
		Core of an Operating System :::
		
		Basic Linux Commands ::
		
			clear 
			User ?
			
		DevOps Engg. 
			
			DevOps Package Management				--> 	Docker 
				Installation,Upgrade,Remove 
				Product License 
			
			User Management 
				Create User
				Grant access / Revoke Access 
				
			File Management
				Create,manage the files
				Scripts - shell,python,yaml....
				
			Access Control
			
			Backup & Recovery
			
			Core Linux Architecture 
			Basic Linux Commands.
			Shell Scripting
			
			Remote server Access
				SSH... 			



		
		Basic Linux Commands ::
		
			clear 
			sudo -i 
			
			<yum> update -y 			==> 
			
			File Management ::
			
				*.sh
				*.java
				*.war 
				*.jar
			
			Directories ==> Folders 
				Collection of files & folders 
			
			ls --> get the list of files & folders from the current directory.
			pwd --> Present working Dir.
			
			Create New Dir.
			mkdir dir1
			
			Change dir 
			cd dir1
		
			Create File:
			
				touch file1.txt
				
				echo "Hello" >> file1.txt
				
				vi file1.txt
				
					Press 'i'  		==> for insert mode.
					press esc 
					Type :qw		==> Save & Exit
					Type :q!		==> Exit without saving the changes.
					
				cp 	copy the files
				mv  move the files 
				rm <file.txt>
				rm -f <file1.txt>
				rm -rf <dir>
			
		
			ll 
			
			drwxr-xr-x --- 
			
			----------
			-			==> Denotes file/dir
			
			 ---		==> Denotes the access mode at the owner level 
				---		==> Denotes the access mode at the group level
				   ---	==> Denotes the access mode at the public user level 
				   
			-rwxrwxrwx
			-rwx------	==> 
			-rwxr-----	
			drw-rw-r--	==>
			-rw-rw-rw-	==>
			-rw-r--r--	==> 	-rw-rw-rw-
			
			
			Create User -- shd be part of a group.
		
		DEV-TEAM		==> User Group Name 
			dev1		==> User ID
			dev2
			dev3
		
		testuser1
		testuser2
		
			How to Change the Access mode ???
			
			chmod == Command 
			
		Let create some users. --> 
		
			Server 
				Client -- *.sh
				
		Authentication :::
		
			Linux support :
			
				passwordless auth.
				token
				password based
				SSH key based auth.
					SSH-Keys :
						private key
						public key
						
		Launch Linux Machine 
			Create User
			Create SSH Key 
				Using SSH Key any one can access the linux machine.
					private/public key.
					
			Optionally, Create Password / password phrase / token
				because by default, Linux support Passwordless Auth.
				
		
		Scenarios:
		
			Jenkins 
			Ansible 
			
		Ansible :::
		
			Install Ansible in one machine(Ansible Controller)		--> Belongs to DevOps/Infra-Team
			
					Target1		--> Developers 
					Target2		--> Testing Team 
					Target3		--> Testing Team




	DevOps Team
		Jenkins_Master :::		create SSH_Key - SSH_Key ( private_key & Public key)
		
			Jenkins_Slave1 -> build - compile & create artifacts 	-- copy the public_key of Jenkins_Master to slave1
			Jenkins_Slave2 

		(OR)	

	DevOps Team
		Jenkins_Master :::		use private_key of slave1 to connect
		
			Jenkins_Slave1 -> build - compile & create artifacts 	-- SSH_Key ( private_key & Public key)
			Jenkins_Slave2 
		
		Best Practise :::
		
			
					
Summary :

		Launch Linux Machines
			Linux fundamentals
			Architecture
			File Management 
			Access Mod 
			User Management
			SSH Key Management
				
########
DAY-7
########

		Linux Shell Scripting!
		
		CLI Commands / API Commands/Call
		
		AWS CLI
			--> Launch an AWS Instance ==> Console
			CLI 
			Script : execute the CLI Commands 
			
		AZ CLI
		
		
			Scripting Languages			==> Automation,Client side Validation,Automated Build & Deployments
											(shell,python,groovy,yaml Scripting Languages)
				(vs)
			programming Languages		==> Used to Create the Business Logic. (Java,Python,C#.Net)
			
		Shell Scripting :::
		
			Objective of the script ?
			What are resources/cli commands/scripting constructs needed ?
		
		
	Email_ID 	:	adfasdf24234@xyc.com
	NAME 		:	22323442340234029
	
	
	Shell Scripting ???
		
	*.sh	==> is the extension for linux scripts
	
	install-git.sh
	
		yum install git -y
	
	Execute Script :
	
		sh install-git.sh 		
		./install-git.sh
	
	Script should be executable 
			Should have access to Execute the Script.
			
		chmod 755 install-git
		
	How to Write the Linux Scripts ???

	hello.sh
		#!/bin/bash
		echo "Hello"
		
	chmod 755 hello.sh

	sh hello.sh 
		Hello
		
		Constants 
		Variables 
			a=5
			b={1,2,3,4}
		Files			json, yaml-file
			collection of records 
		Iterations -- Loops - for,while,do-while,
		Conditional statements 
			If,if-else,Case
		Arrays 
		
	Examples :::

		
	Loop :
	
		IN_FILE1 ==> 
		
			read some records from this file ???
			Multiple records :::
			
			10001 --> print that record 
			
			10000adfasdf----
			23451werwerw----
			10001ffasffs----
			91231ooooooo----
			10001sdvdsfv----
			
		10001ffasffs----
		10001sdvdsfv----
		
		
		1,2,3,4,5,...............,100
		
		print only the even Number ?
		
		Calculate Sum of two Numbers ???
		
		Logic / Steps Involved ??
		
		Algorithm : DS
			Step by step instructions to perform some task.
			
		int n1 = 5 
		int n2 = 5 
		int n3 = 0
		n3 = n1 + n2 # n3 = 10

		12312 + 1231231 = ?
		
		123123123123123131312 + 12312312312312312312312312312 = ?
		
		123.123123123 + 12312312.12312312312312 = ?
		
	
	Backup & Recovery !!!
	
	Memory Management !!!
		
		
Summary : 
			File Management 
			Access Mod 
			User Management
			SSH Key Management
			Memory 
			Backup & Recovery
			
			
######################
DAY-7 - 8th Mar. 2023
######################

		Fundamentals of Java!
		
		DevOps Tools 
		
		Application Types ::	
			webappln
			desktop
			Mobile 
		
		Web-Application :::
		
			Website / Webpage 
			
		3-Tier Application:
			User-Interface -- Frontend Design	(HTML.....)		
			Business Logic						Java Programming Language 						
			Database ( Oracle/Mysql ) -- Backend

		2-Tier Application:
			User-Interface -- Frontend Design		
			Business Logic 					client side scripting!
		
		1-Tier Application 
			Business-Logic

	SIGN-IN Service --> Business-Logic,Database,Front-End Design
			Independent Source Code Repository 
			Build 
			Test
			Deploy

	Java Programming Language :::
	.Net Programming ::::
	
		Data Storage :
			File Systems
			Database Systems
				Relational Data -- 
				
	Programming Languages						(vs)			Scripting Languages
	Eg.:														Eg.: 
		C,C++,JAVA													JavaScripts,VB Scripts,shell script, python script,groovy, yaml 
	Used to Develop business Logics								Used to perform client side validations & Tasks Automations							
		
		
	On DevOps perspective:
		How the Java Program are developed?
		How it is built, test, and deployed?
		What are the tools developers used to develop, build, test and deploy the java applications?
		
	
	Automation of all the above! using DevOps!
	
		Algorithm!
		
			1. Data 													xyz
			2. Variable --> Identifier to hold the data  				stud_name = "xyz"
			3. Data Types --> Numberic, String, boolean 				String stud_name = "xyz"
			4. Arrays --> group of values of same data type 			String stud_name[24] = "xyz,asdf,asdf,asdf,asdf,as,df,asdf"
			5. File Handling (Seqential Data)							Create,Write,Read,Update,Delete the records
			6. Database System 											Create,Write,Read,Update,Delete the records
				Manage Data in the form of Rows & Columns
				Stud_Name 	ID 		Addr 	Contact#
				jjjj		jjjjj	jjjj	jjj
			7. Multiple servers, with multiple service thru some progam calls.
			8. Programming Constructs like : Iterations, Conditional Statements 
		
		Data 				(vs)		Information ?
		raw content 					Processed Data
		INDIA							INDIA is a Country 
		
	
	Java ::
	
		Console Application
			Desktop Application.
			
		Web Application
			Springboot Web Applications.
			
		Continuous Development ???	
			Tools :::
			
				Development Tools ::

					Integrated Development Environment (IDE) 
						Eg.: Eclipse based IDEs, Visual Studio Code, Visual Studio, Pycharm, Intellij
			
			Terminologies :::
			
			Build		--> Compile the source code & Create artifacts(binaries) - *.jar,*.war,*.dll,*.exec...	 
			Artifacts
			Binaries
			Environments:
				Development Servers 
				Build Servers
				Test Servers 	QA/UAT/Pre-Prod 
				Deployment Servers	Prod
				
			Non-Prod												Prod 
				Development Servers 									Deployment Servers	Prod	
				Build Servers
				Test Servers 	QA/UAT/Pre-Prod 			
				
				
				
			Development Environment 
				Install JDK
				Install Eclipse 
				Install Visual Studio Code 
				Install GIT		

			Build Environment 
				Build Tools --> Maven/ANT/Gradle
			
			Test Environment		QA/UAT/Pre-Prod Server
			
			Test/Deployment/Target/Hosted Servers			VM - Computing Device 
			
				Install 
					Tomcat / Nginx Web Appln. Server 		Software 		
		
			Production Environment/Servers 	
				Install Tomcat Web Appln. Server
				
		
		Install :::::
			Development Environment 
				Install JDK
				Install Eclipse 
				Install Visual Studio Code 
				Install GIT				
				
		Java Programming Concepts :::
		
		
		sum()
		{
		
			int a = 5, b = 5, c =0;
			
			c = a + b 
			
			return c 
			
		}
		
		sum (int a, int b)
		{
		
			int c = 0;
			
			c = a + b 
			
			return c 
			
		}
		
		sum (int a, int b, int c)
		{
		
			int d = 0;
			
			d = a + b + c 
			
			return c 
			
		}
		
		sum();
		sum(1,2);
		sum(12,33,3);
		

		Install :::::
		
			Development Environment 
				Install JDK
							https://openjdk.org/
				Install Eclipse 
							https://www.eclipse.org/downloads/
							Choose - Eclipse for Enterprise Java and Web Developers - Edition							
				Install Tomcat Web Appln. Server
							https://tomcat.apache.org/							
				Install Visual Studio Code *** 
							https://code.visualstudio.com/download				

######################
DAY-7 - 9th Mar. 2023
######################

		Install ::::: on Dev System :: Windows 
		
			Development Environment 
				Install JDK
							https://openjdk.org/
							Set Envrionment Variable path
							
				Install Eclipse 
							https://www.eclipse.org/downloads/
							Choose - Eclipse for Enterprise Java and Web Developers - Edition
							
							
				Install Tomcat Web Appln. Server
							https://tomcat.apache.org/
							Choose : Tomcat version 8
							Choose : 32-bit/64-bit Windows Service Installer (pgp, sha512) 
							Tomcat runs by default in port : 8080
							
				Install GIT :
						
				Install Visual Studio Code *** 
							https://code.visualstudio.com/download				
							

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>www.loksaieta.com</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
</head>
<body>
  <div class="jumbotron" style="background-color:white">
      <img src="https://octodex.github.com/images/spidertocat.png" alt="Spidertocat"
           class="img-responsive center-block" style="width:250px"/>
      <h2 class="text-center">Hello Everyone</h2>
      <p class="text-center">Application Modernization using DevOps - Loksai.ETA</p>
  </div>
</body>
</html>

			
			Maven Build Tool 	--> 	Compile the java application & create artifacts 
										The Dependencies & Plugins are auto installed using Maven
										
			Console Application 
			Web Application :
				Spring boot application framework.
				
				
			Create package 
				Class
					func
					
			func. 
			
			Maven Project --> 
			
				pom.xml ===> 	is a default config file for Maven build.
								Define all the dependencies & Plugins required to build and create artifacts. 
				
Summary ::: 

			Java Programming Fundamentals 
			Installation of :
				jdk
				eclipse
				tomcat
			Configuration of Tomcat in Eclipse, port 
			Creation of Java Console Application -- Java Package & Class 
			Creation of Java Dynamic Web Application 
				-- Created index.html, Integrated with Tomcat and executed the application in tomcat server
